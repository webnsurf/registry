version: "2"

services:
  portus:
    image: opensuse/portus:head
    container_name: webnsurf-registry-ui
    environment:
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/webnsurf.com.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

      # SSL
      - PORTUS_PUMA_TLS_KEY=/certificates/webnsurf.com.key
      - PORTUS_PUMA_TLS_CERT=/certificates/fullchain.cer

      # NGinx is serving the assets instead of Puma. If you want to change this,
      # uncomment this line.
      # - RAILS_SERVE_STATIC_FILES='true'
    ports:
      - 3000
    links:
      - db
    volumes:
      - ~/.acme.sh/webnsurf.com:/certificates:ro
      - static:/srv/Portus/public

  background:
    image: opensuse/portus:head
    container_name: webnsurf-registry-sync
    depends_on:
      - portus
      - db
    environment:
      # Theoretically not needed, but cconfig's been buggy on this...
      - CCONFIG_PREFIX=PORTUS
      # - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
      - PORTUS_MACHINE_FQDN_VALUE=registry

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/webnsurf.com.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

      - PORTUS_BACKGROUND=true
    links:
      - db
    volumes:
      - ~/.acme.sh/webnsurf.com:/certificates:ro

  db:
    image: library/mariadb:10.0.23
    container_name: webnsurf-registry-db
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    environment:
      - MYSQL_DATABASE=portus_production

      # Again, the password shouldn't be handled like this.
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - /var/lib/portus/mariadb:/var/lib/mysql

  registry:
    image: library/registry:2.6
    container_name: webnsurf-registry-api
    command: ["/bin/sh", "/etc/docker/registry/init"]
    environment:
      # Authentication
      REGISTRY_AUTH_TOKEN_REALM: https://${MACHINE_FQDN}/v2/token
      REGISTRY_AUTH_TOKEN_SERVICE: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ISSUER: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /secrets/fullchain.cer

      # SSL
      REGISTRY_HTTP_TLS_CERTIFICATE: /secrets/fullchain.cer
      REGISTRY_HTTP_TLS_KEY: /secrets/webnsurf.com.key

      # Portus endpoint
      REGISTRY_NOTIFICATIONS_ENDPOINTS: >
        - name: portus
          url: https://${MACHINE_FQDN}/v2/webhooks/events
          timeout: 2000ms
          threshold: 5
          backoff: 1s
    volumes:
      - /var/lib/portus/registry:/var/lib/registry
      - ~/.acme.sh/webnsurf.com:/secrets:ro
      - ./registry/config.yml:/etc/docker/registry/config.yml:ro
      - ./registry/init:/etc/docker/registry/init:ro
    ports:
      - 5000
      - 5001 # required to access debug service
    links:
      - portus:portus

  registry-nginx:
    image: nginx:1.19.5-alpine
    container_name: webnsurf-registry-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ~/.acme.sh/webnsurf.com:/secrets:ro
      - static:/srv/Portus/public:ro
    ports:
      - 443
      - 80
    labels:
      traefik.enable: true
      traefik.http.routers.registry-frontend.rule: Host(`${MACHINE_FQDN}`)
      traefik.http.routers.registry-frontend.entrypoints: websecure
      traefik.http.routers.registry-frontend.tls: true

      traefik.http.routers.registry-redirect.rule: Host(`${MACHINE_FQDN}`)
      traefik.http.routers.registry-redirect.entrypoints: web
      traefik.http.routers.registry-redirect.middlewares: https-redirect@file

      traefik.http.services.registry-nginx.loadbalancer.server.port: 443
      traefik.http.services.registry-nginx.loadbalancer.server.scheme: https
    links:
      - registry:registry
      - portus:portus

networks:
  default:
    external:
      name: webnsurf_network

volumes:
  static:
    driver: local
